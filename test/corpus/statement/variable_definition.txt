===
Variable definition in function with array
===

fn test() {
  let mem : [i32];
}

---
(source_file
  (function_definition
    (function_keyword)
    (identifier)
    (argument_list)
    (block
      (variable_definition_statement
        (identifier)
        (type_array
          (type_i32))))))

===
Multi-dimensional arrays
===
fn test() {
  let 3d_array : [[[u32]]];
}

---
(source_file
  (function_definition
    (function_keyword)
    (identifier)
    (argument_list)
    (block
      (variable_definition_statement
        (identifier)
        (type_array
          (type_array
            (type_array
              (type_u32))))))))

===
Array of non-primitive types
===
fn test() {
  let x : [Optional<someNamespace::String>; 4];
}
---
(source_file
  (function_definition
    (function_keyword)
    (identifier)
    (argument_list)
    (block
      (variable_definition_statement
        (identifier)
        (type_array
          (generic_name
            (identifier)
            (type_argument_list
              (type_qualified_name
                (identifier)
                (expand_operator)
                (identifier))))
          (number_literal))))))
===
Mix of number literals and identifiers in array declaration
===
fn test() {
  let params : [i32; 3] = [100, MAX_MEM, 0, red_color];
}
---
(source_file
  (function_definition
    (function_keyword)
    (identifier)
    (argument_list)
    (block
      (variable_definition_statement
        (identifier)
        (type_array
          (type_i32)
          (number_literal))
        (assign_operator)
        (array_literal
          (number_literal)
          (identifier)
          (number_literal)
          (identifier))))))

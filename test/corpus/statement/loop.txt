===
Base loop statement
===

fn main() {
    loop true {
        println("hello");
    }
}

---
    (source_file
      (function_definition
        (identifier)
        (argument_list)
        (block
          (loop_statement
            (bool_literal)
            (block
              (expression_statement
                (function_call_expression
                  (identifier)
                  (string_literal))))))))

===
Loop statement without a condition
===

fn main() {
    loop {
        println("hello");
    }
}

---
    (source_file
      (function_definition
        (identifier)
        (argument_list)
        (block
          (loop_statement
            (block
              (expression_statement
                (function_call_expression
                  (identifier)
                  (string_literal))))))))


===
Loop statement with expression
===

fn main() {
  let mut i : i32 = -10;
  loop i {
      i = i + 1;
      println("test");
    }
}

---
    (source_file
      (function_definition
        (identifier)
        (argument_list)
        (block
          (variable_definition_statement
            (mut_keyword)
            (identifier)
            (type_i32)
            (number_literal))
          (loop_statement
            (identifier)
            (block
              (assign_statement
                (identifier)
                (binary_expression
                  (identifier)
                  (number_literal)))
              (expression_statement
                (function_call_expression
                  (identifier)
                  (string_literal))))))))

===
Iterating through array
===

fn sum_all(xs: [i32; 10]) -> i32 {
  let pos : i32 = 0;
  let mut accumulator: i32 = 0;
  loop 10 {
    accumulator = accumulator + xs[pos];
    pos = pos + 1;
  }
  return accumulator;
}

---
    (source_file
      (function_definition
        (identifier)
        (argument_list
          (argument_declaration
            (identifier)
            (type_array
              (type_i32)
              (number_literal))))
        (type_i32)
        (block
          (variable_definition_statement
            (identifier)
            (type_i32)
            (number_literal))
          (variable_definition_statement
            (mut_keyword)
            (identifier)
            (type_i32)
            (number_literal))
          (loop_statement
            (number_literal)
            (block
              (assign_statement
                (identifier)
                (binary_expression
                  (identifier)
                  (array_index_access_expression
                    (identifier)
                    (identifier))))
              (assign_statement
                (identifier)
                (binary_expression
                  (identifier)
                  (number_literal)))))
          (return_statement
            (identifier)))))

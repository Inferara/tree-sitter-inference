===
Assign unary expression
===

fn valid_Address(a: Address) -> Address {
    a = !a;
    return a;
}
---
    (source_file
      (function_definition
        (identifier)
        (argument_list
          (argument_declaration
            (identifier)
            (identifier)))
        (identifier)
        (block
          (assign_statement
            (identifier)
            (prefix_unary_expression
              (unary_not)
              (identifier)))
          (return_statement
            (identifier)))))

===
Array access expressions
===

fn get_first(xs: [i32; 3]) -> i32 {
  return xs[0];
}

---
(source_file
  (function_definition
    (identifier)
    (argument_list
      (argument_declaration
        (identifier)
        (type_array
          (type_i32)
          (number_literal))))
    (type_i32)
    (block
      (return_statement
        (array_index_access_expression
          (identifier)
          (number_literal))))))
